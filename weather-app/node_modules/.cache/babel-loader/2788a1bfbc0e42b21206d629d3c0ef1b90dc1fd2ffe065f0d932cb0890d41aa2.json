{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaik_t\\\\Downloads\\\\Telegram Desktop\\\\weather-application-1.0.2\\\\weather-application\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport { RandomColor } from \"./styles.js\";\nimport Header from './components/Header.jsx';\nimport Footer from './components/Footer.jsx';\nimport { TiLocationArrowOutline } from \"react-icons/ti\";\nimport { CiCloudOn, CiCloudDrizzle, CiSun } from \"react-icons/ci\";\n\n// Forecast icons mapping\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getWeatherIcon = desc => {\n  const d = desc.toLowerCase();\n  if (d.includes(\"rain\")) return /*#__PURE__*/_jsxDEV(CiCloudDrizzle, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 34\n  }, this);\n  if (d.includes(\"cloud\")) return /*#__PURE__*/_jsxDEV(CiCloudOn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 35\n  }, this);\n  if (d.includes(\"sun\")) return /*#__PURE__*/_jsxDEV(CiSun, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(CiCloudOn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n// Background images for weather conditions\nconst weatherBackgrounds = {\n  clear: \"./assets/bg_sunny.jpg\",\n  clouds: \"./assets/bg_cloudy.jpg\",\n  rain: \"./assets/bg_rainy.jpg\",\n  night: \"./assets/bg_night.jpg\"\n};\n\n// Component to render city cards\nfunction RenderingArrayOfCityObjects({\n  cityData,\n  onRemove,\n  toggleFavorite\n}) {\n  const citylistItems = cityData.map((city, index) => {\n    // Use RandomColor for background\n    const cardColor = RandomColor();\n\n    // Mock 3-day forecast\n    const forecast = Array(3).fill().map((_, i) => ({\n      day: `Day ${i + 1}`,\n      tempMin: city.minTemperature - i,\n      tempMax: city.maxTemperature + i,\n      icon: getWeatherIcon(city.description)\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card animate-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-division\",\n        style: {\n          background: cardColor\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-leftDivision\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"city-name\",\n            children: [city.cityName, \",\", city.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"city-time\",\n            children: city.lastUpdatedTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-desc\",\n            children: [getWeatherIcon(city.description), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"weather-description\",\n              children: city.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-rightDivision\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"temp\",\n              children: [city.temperature, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"temp-feels\",\n              children: [\"Feels Like: \", city.feelsLike || city.temperature, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"temp-min\",\n              children: [\"Min: \", city.minTemperature, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"temp-max\",\n              children: [\"Max: \", city.maxTemperature, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-division\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extra-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"pressure\",\n              children: [\"Pressure : \", city.pressure, \" hPa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"humidity\",\n              children: [\"Humidity : \", city.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"visibility\",\n              children: [\"Visibility : \", city.visibility]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wind\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wind-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wind-icon\",\n                children: /*#__PURE__*/_jsxDEV(TiLocationArrowOutline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"wind-speed\",\n                  children: city.wind\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sun\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sun-rise\",\n              children: [\"Sunrise : \", city.sunrise]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sun-set\",\n              children: [\"Sunset : \", city.sunset]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-section\",\n        children: forecast.map((f, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: f.day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), f.icon, /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [f.tempMin, \"\\xB0C / \", f.tempMax, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"favorite-btn\",\n          onClick: () => toggleFavorite(city.cityName),\n          children: city.favorite ? \"★ Favorite\" : \"☆ Favorite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-btn\",\n          onClick: () => onRemove(city.cityName),\n          children: \"\\u274C Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: citylistItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 10\n  }, this);\n}\n\n// Main App component\n_c = RenderingArrayOfCityObjects;\nfunction App() {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [bgImage, setBgImage] = useState(\"./assets/background.png\");\n\n  // Function to fetch city weather\n  const addCity = manualCity => {\n    const trimmedInput = (manualCity || search).trim();\n    if (!trimmedInput) return;\n    const cityList = trimmedInput.split(\",\").map(c => c.trim()).filter(c => c);\n    const newCityList = cityList.filter(c => !cities.some(existing => existing.cityName.toLowerCase() === c.toLowerCase()));\n    if (newCityList.length === 0) {\n      setError(\"All cities already added or invalid input\");\n      return;\n    }\n    const query = newCityList.join(\",\");\n    setLoading(true);\n    axios.get(`http://localhost:3001/weather/cities?names=${query}`).then(response => {\n      if (!response.data || response.data.length === 0) {\n        setError(\"City not found\");\n        return;\n      }\n      const updatedData = response.data.map(c => ({\n        ...c,\n        favorite: false,\n        feelsLike: c.feelsLike || c.temperature\n      }));\n      setCities(prev => [...prev, ...updatedData]);\n\n      // update background with the first city condition\n      const firstCity = response.data[0];\n      if (firstCity) {\n        const desc = firstCity.description.toLowerCase();\n        if (desc.includes(\"rain\")) setBgImage(weatherBackgrounds.rain);else if (desc.includes(\"cloud\")) setBgImage(weatherBackgrounds.clouds);else if (desc.includes(\"clear\") || desc.includes(\"sun\")) setBgImage(weatherBackgrounds.clear);else setBgImage(weatherBackgrounds.night);\n      }\n      setSearch(\"\");\n      setError(\"\");\n    }).catch(err => {\n      var _err$response, _err$response$data;\n      console.error(\"Error fetching cities:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Error fetching cities\");\n    }).finally(() => setLoading(false));\n  };\n\n  // Remove city\n  const removeCity = cityName => {\n    setCities(prev => prev.filter(city => city.cityName !== cityName));\n  };\n\n  // Toggle favorite\n  const toggleFavorite = cityName => {\n    setCities(prev => prev.map(city => city.cityName === cityName ? {\n      ...city,\n      favorite: !city.favorite\n    } : city));\n  };\n\n  // Auto-refresh every 5 minutes\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (cities.length > 0) {\n        const query = cities.map(c => c.cityName).join(\",\");\n        axios.get(`http://localhost:3001/weather/cities?names=${query}`).then(response => {\n          if (response.data) {\n            const refreshedData = response.data.map(c => {\n              const oldCity = cities.find(old => old.cityName === c.cityName);\n              return {\n                ...c,\n                favorite: (oldCity === null || oldCity === void 0 ? void 0 : oldCity.favorite) || false,\n                feelsLike: c.feelsLike || c.temperature\n              };\n            });\n            setCities(refreshedData);\n          }\n        }).catch(err => console.error(\"Auto-refresh failed:\", err));\n      }\n    }, 300000);\n    return () => clearInterval(interval);\n  }, [cities]);\n\n  // Auto-detect location\n  const detectLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        axios.get(`http://localhost:3001/weather/coordinates?lat=${latitude}&lon=${longitude}`).then(res => {\n          if (res.data) {\n            const city = res.data;\n            addCity(city.cityName);\n          }\n        }).catch(err => console.error(\"Location fetch failed:\", err));\n      }, error => {\n        console.error(\"Geolocation error:\", error);\n        setError(\"Unable to fetch location.\");\n      });\n    } else {\n      setError(\"Geolocation not supported in your browser.\");\n    }\n  };\n\n  // Split favorites\n  const favoriteCities = cities.filter(c => c.favorite);\n  const normalCities = cities.filter(c => !c.favorite);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    style: {\n      backgroundImage: `url(${bgImage})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter city or multiple cities (comma separated)\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        onKeyPress: e => {\n          if (e.key === \"Enter\") addCity();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addCity(),\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 22\n        }, this) : \"Add City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: detectLocation,\n        className: \"location-btn\",\n        children: \"\\uD83D\\uDCCD Detect My Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }, this), favoriteCities.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"\\u2605 Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RenderingArrayOfCityObjects, {\n        cityData: favoriteCities,\n        onRemove: removeCity,\n        toggleFavorite: toggleFavorite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(RenderingArrayOfCityObjects, {\n      cityData: normalCities,\n      onRemove: removeCity,\n      toggleFavorite: toggleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n}\n// Fetch weather using latitude & longitude\n_s(App, \"SXm6/gQzDndD4G8AFzONoZKXk1Q=\");\n_c2 = App;\nconst fetchWeatherByCoords = async (lat, lon) => {\n  try {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n    const data = await response.json();\n    if (data.cod === 200) {\n      setWeatherData(prev => [...prev, data]);\n    } else {\n      alert(\"Failed to fetch weather for your location.\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching weather by coords:\", error);\n  }\n};\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderingArrayOfCityObjects\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","RandomColor","Header","Footer","TiLocationArrowOutline","CiCloudOn","CiCloudDrizzle","CiSun","jsxDEV","_jsxDEV","Fragment","_Fragment","getWeatherIcon","desc","d","toLowerCase","includes","fileName","_jsxFileName","lineNumber","columnNumber","weatherBackgrounds","clear","clouds","rain","night","RenderingArrayOfCityObjects","cityData","onRemove","toggleFavorite","citylistItems","map","city","index","cardColor","forecast","Array","fill","_","i","day","tempMin","minTemperature","tempMax","maxTemperature","icon","description","className","children","style","background","cityName","country","lastUpdatedTime","temperature","feelsLike","pressure","humidity","visibility","wind","sunrise","sunset","f","onClick","favorite","_c","App","_s","cities","setCities","search","setSearch","error","setError","loading","setLoading","bgImage","setBgImage","addCity","manualCity","trimmedInput","trim","cityList","split","c","filter","newCityList","some","existing","length","query","join","get","then","response","data","updatedData","prev","firstCity","catch","err","_err$response","_err$response$data","console","message","finally","removeCity","interval","setInterval","refreshedData","oldCity","find","old","clearInterval","detectLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","res","favoriteCities","normalCities","backgroundImage","type","placeholder","value","onChange","e","target","onKeyPress","key","disabled","color","textAlign","_c2","fetchWeatherByCoords","lat","lon","fetch","API_KEY","json","cod","setWeatherData","alert","$RefreshReg$"],"sources":["C:/Users/shaik_t/Downloads/Telegram Desktop/weather-application-1.0.2/weather-application/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport { RandomColor } from \"./styles.js\";\nimport Header from './components/Header.jsx';\nimport Footer from './components/Footer.jsx';\nimport { TiLocationArrowOutline } from \"react-icons/ti\";\nimport { CiCloudOn, CiCloudDrizzle, CiSun } from \"react-icons/ci\";\n\n// Forecast icons mapping\nconst getWeatherIcon = (desc) => {\n  const d = desc.toLowerCase();\n  if (d.includes(\"rain\")) return <CiCloudDrizzle />;\n  if (d.includes(\"cloud\")) return <CiCloudOn />;\n  if (d.includes(\"sun\")) return <CiSun />;\n  return <CiCloudOn />;\n};\n\n// Background images for weather conditions\nconst weatherBackgrounds = {\n  clear: \"./assets/bg_sunny.jpg\",\n  clouds: \"./assets/bg_cloudy.jpg\",\n  rain: \"./assets/bg_rainy.jpg\",\n  night: \"./assets/bg_night.jpg\",\n};\n\n// Component to render city cards\nfunction RenderingArrayOfCityObjects({ cityData, onRemove, toggleFavorite }) {\n  const citylistItems = cityData.map((city, index) => {\n    // Use RandomColor for background\n    const cardColor = RandomColor();\n\n    // Mock 3-day forecast\n    const forecast = Array(3).fill().map((_, i) => ({\n      day: `Day ${i + 1}`,\n      tempMin: city.minTemperature - i,\n      tempMax: city.maxTemperature + i,\n      icon: getWeatherIcon(city.description)\n    }));\n\n    return (\n      <div className=\"card animate-card\" key={index}>\n        <div className=\"top-division\" style={{ background: cardColor }}>\n          <div className='top-leftDivision'>\n            <h2 className='city-name'>{city.cityName},{city.country}</h2>\n            <p className='city-time'>{city.lastUpdatedTime}</p>\n            <div className='weather-desc'>\n              {getWeatherIcon(city.description)}\n              <p className='weather-description'>{city.description}</p>\n            </div>\n          </div>\n          <div className='top-rightDivision'>\n            <div className='temp-content'>\n              <h1 className='temp'>{city.temperature}°C</h1>\n              <p className='temp-feels'>Feels Like: {city.feelsLike || city.temperature}°C</p>\n              <p className='temp-min'>Min: {city.minTemperature}°C</p>\n              <p className='temp-max'>Max: {city.maxTemperature}°C</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bottom-division\">\n          <div className='bottom-content'>\n            <div className=\"extra-details\">\n              <p className='pressure'>Pressure : {city.pressure} hPa</p>\n              <p className='humidity'>Humidity : {city.humidity}%</p>\n              <p className='visibility'>Visibility : {city.visibility}</p>\n            </div>\n            <div className=\"wind\">\n              <div className='wind-content'>\n                <div className='wind-icon'><TiLocationArrowOutline /></div>\n                <div><p className='wind-speed'>{city.wind}</p></div>\n              </div>\n            </div>\n            <div className=\"sun\">\n              <p className='sun-rise'>Sunrise : {city.sunrise}</p>\n              <p className='sun-set'>Sunset : {city.sunset}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Forecast Section */}\n        <div className=\"forecast-section\">\n          {forecast.map((f, i) => (\n            <div className=\"forecast-card\" key={i}>\n              <p>{f.day}</p>\n              {f.icon}\n              <p>{f.tempMin}°C / {f.tempMax}°C</p>\n            </div>\n          ))}\n        </div>\n\n        {/* Favorite & Remove Buttons */}\n        <div className=\"card-buttons\">\n          <button className=\"favorite-btn\" onClick={() => toggleFavorite(city.cityName)}>\n            {city.favorite ? \"★ Favorite\" : \"☆ Favorite\"}\n          </button>\n          <button className=\"remove-btn\" onClick={() => onRemove(city.cityName)}>❌ Remove</button>\n        </div>\n      </div>\n    );\n  });\n\n  return <div className=\"card-container\">{citylistItems}</div>;\n}\n\n// Main App component\nfunction App() {\n  const [cities, setCities] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [bgImage, setBgImage] = useState(\"./assets/background.png\");\n\n  // Function to fetch city weather\n  const addCity = (manualCity) => {\n    const trimmedInput = (manualCity || search).trim();\n    if (!trimmedInput) return;\n\n    const cityList = trimmedInput.split(\",\").map(c => c.trim()).filter(c => c);\n    const newCityList = cityList.filter(c =>\n      !cities.some(existing => existing.cityName.toLowerCase() === c.toLowerCase())\n    );\n    if (newCityList.length === 0) {\n      setError(\"All cities already added or invalid input\");\n      return;\n    }\n\n    const query = newCityList.join(\",\");\n    setLoading(true);\n    axios.get(`http://localhost:3001/weather/cities?names=${query}`)\n      .then(response => {\n        if (!response.data || response.data.length === 0) {\n          setError(\"City not found\");\n          return;\n        }\n        const updatedData = response.data.map(c => ({ \n          ...c, \n          favorite: false, \n          feelsLike: c.feelsLike || c.temperature \n        }));\n        setCities(prev => [...prev, ...updatedData]);\n\n        // update background with the first city condition\n        const firstCity = response.data[0];\n        if (firstCity) {\n          const desc = firstCity.description.toLowerCase();\n          if (desc.includes(\"rain\")) setBgImage(weatherBackgrounds.rain);\n          else if (desc.includes(\"cloud\")) setBgImage(weatherBackgrounds.clouds);\n          else if (desc.includes(\"clear\") || desc.includes(\"sun\")) setBgImage(weatherBackgrounds.clear);\n          else setBgImage(weatherBackgrounds.night);\n        }\n\n        setSearch(\"\");\n        setError(\"\");\n      })\n      .catch(err => {\n        console.error(\"Error fetching cities:\", err);\n        setError(err.response?.data?.message || \"Error fetching cities\");\n      })\n      .finally(() => setLoading(false));\n  };\n\n  // Remove city\n  const removeCity = (cityName) => {\n    setCities(prev => prev.filter(city => city.cityName !== cityName));\n  };\n\n  // Toggle favorite\n  const toggleFavorite = (cityName) => {\n    setCities(prev => prev.map(city => city.cityName === cityName ? { ...city, favorite: !city.favorite } : city));\n  };\n\n  // Auto-refresh every 5 minutes\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (cities.length > 0) {\n        const query = cities.map(c => c.cityName).join(\",\");\n        axios.get(`http://localhost:3001/weather/cities?names=${query}`)\n          .then(response => {\n            if (response.data) {\n              const refreshedData = response.data.map(c => {\n                const oldCity = cities.find(old => old.cityName === c.cityName);\n                return { ...c, favorite: oldCity?.favorite || false, feelsLike: c.feelsLike || c.temperature };\n              });\n              setCities(refreshedData);\n            }\n          })\n          .catch(err => console.error(\"Auto-refresh failed:\", err));\n      }\n    }, 300000);\n    return () => clearInterval(interval);\n  }, [cities]);\n\n  // Auto-detect location\n  const detectLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          axios.get(`http://localhost:3001/weather/coordinates?lat=${latitude}&lon=${longitude}`)\n            .then(res => {\n              if (res.data) {\n                const city = res.data;\n                addCity(city.cityName);\n              }\n            })\n            .catch(err => console.error(\"Location fetch failed:\", err));\n        },\n        (error) => {\n          console.error(\"Geolocation error:\", error);\n          setError(\"Unable to fetch location.\");\n        }\n      );\n    } else {\n      setError(\"Geolocation not supported in your browser.\");\n    }\n  };\n\n  // Split favorites\n  const favoriteCities = cities.filter(c => c.favorite);\n  const normalCities = cities.filter(c => !c.favorite);\n\n  return (\n    <div className=\"app\" style={{ backgroundImage: `url(${bgImage})` }}>\n      <Header />\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter city or multiple cities (comma separated)\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          onKeyPress={(e) => { if (e.key === \"Enter\") addCity(); }}\n        />\n        <button onClick={() => addCity()} disabled={loading}>\n          {loading ? <span className=\"loader\"></span> : \"Add City\"}\n        </button>\n        <button onClick={detectLocation} className=\"location-btn\">📍 Detect My Location</button>\n      </div>\n      {error && <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>}\n\n      {/* Favorites Panel */}\n      {favoriteCities.length > 0 && (\n        <>\n          <h3 style={{ textAlign: \"center\" }}>★ Favorites</h3>\n          <RenderingArrayOfCityObjects cityData={favoriteCities} onRemove={removeCity} toggleFavorite={toggleFavorite} />\n        </>\n      )}\n\n      {/* Normal Cities */}\n      <RenderingArrayOfCityObjects cityData={normalCities} onRemove={removeCity} toggleFavorite={toggleFavorite} />\n\n      <Footer />\n    </div>\n  );\n}\n// Fetch weather using latitude & longitude\nconst fetchWeatherByCoords = async (lat, lon) => {\n  try {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`\n    );\n    const data = await response.json();\n\n    if (data.cod === 200) {\n      setWeatherData((prev) => [...prev, data]);\n    } else {\n      alert(\"Failed to fetch weather for your location.\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching weather by coords:\", error);\n  }\n};\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}