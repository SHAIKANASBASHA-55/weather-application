{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaik_t\\\\Downloads\\\\Telegram Desktop\\\\weather-application-1.0.2\\\\weather-application\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './index.css'; // CSS styling\nimport { RandomColor } from \"./styles.js\";\nimport Header from './components/Header.jsx';\nimport Footer from './components/Footer.jsx';\nimport { TiLocationArrowOutline } from \"react-icons/ti\";\nimport { CiCloudOn } from \"react-icons/ci\";\n\n// Component to render city cards\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RenderingArrayOfCityObjects({\n  cityData,\n  onRemove\n}) {\n  const citylistItems = cityData.map((city, index) => {\n    const topDivisionColour = {\n      backgroundColor: RandomColor()\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-division\",\n        style: topDivisionColour,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-leftDivision\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"city-name\",\n            children: [city.cityName, \",\", city.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"city-time\",\n            children: city.lastUpdatedTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-desc\",\n            children: [/*#__PURE__*/_jsxDEV(CiCloudOn, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"weather-description\",\n              children: city.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-rightDivision\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"temp\",\n              children: [city.temperature, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"temp-min\",\n              children: [\"Temp min: \", city.minTemperature, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"temp-max\",\n              children: [\"Temp max: \", city.maxTemperature, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-division\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extra-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"pressure\",\n              children: [\"Pressure : \", city.pressure, \" hPa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"humidity\",\n              children: [\"Humidity : \", city.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"visibility\",\n              children: [\"Visibility : \", city.visibility]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wind\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wind-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wind-icon\",\n                children: /*#__PURE__*/_jsxDEV(TiLocationArrowOutline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"wind-speed\",\n                  children: city.wind\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sun\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sun-rise\",\n              children: [\"Sunrise : \", city.sunrise]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sun-set\",\n              children: [\"Sunset : \", city.sunset]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-btn\",\n        onClick: () => onRemove(city.cityName),\n        children: \"\\u274C Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: citylistItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n}\n\n// Main App component\n_c = RenderingArrayOfCityObjects;\nfunction App() {\n  _s();\n  const [cities, setCities] = useState([]); // list of fetched cities\n  const [search, setSearch] = useState(\"\"); // search input\n  const [error, setError] = useState(\"\"); // error message\n  const [loading, setLoading] = useState(false); // loader state\n\n  // 🔹 New states for autocomplete\n  const [allCities, setAllCities] = useState([]); // all available cities from backend\n  const [suggestions, setSuggestions] = useState([]); // filtered list\n\n  // Fetch all available cities on mount\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/weather/all-cities\") // Make sure backend has this API\n    .then(response => {\n      setAllCities(response.data); // assume response is [\"India\", \"USA\", \"Canada\", ...]\n    }).catch(err => console.error(\"Error fetching all cities:\", err));\n  }, []);\n\n  // Function to fetch city weather\n  const addCity = () => {\n    const trimmedInput = search.trim();\n    if (!trimmedInput) return;\n    const cityList = trimmedInput.split(\",\").map(c => c.trim()).filter(c => c);\n    const newCityList = cityList.filter(c => !cities.some(existing => existing.cityName.toLowerCase() === c.toLowerCase()));\n    if (newCityList.length === 0) {\n      setError(\"All cities already added or invalid input\");\n      return;\n    }\n    const query = newCityList.join(\",\");\n    setLoading(true);\n    axios.get(`http://localhost:3001/weather/cities?names=${query}`).then(response => {\n      if (!response.data || response.data.length === 0) {\n        setError(\"City not found\");\n        return;\n      }\n      setCities(prev => [...prev, ...response.data]);\n      setSearch(\"\");\n      setError(\"\");\n      setSuggestions([]);\n    }).catch(err => {\n      console.error(\"Error fetching cities:\", err);\n      if (err.response && err.response.data && err.response.data.message) {\n        setError(err.response.data.message);\n      } else {\n        setError(\"Error fetching cities\");\n      }\n    }).finally(() => setLoading(false));\n  };\n\n  // Function to remove a city\n  const removeCity = cityName => {\n    setCities(prev => prev.filter(city => city.cityName !== cityName));\n  };\n\n  // Auto-refresh every 5 minutes\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (cities.length > 0) {\n        const query = cities.map(c => c.cityName).join(\",\");\n        axios.get(`http://localhost:3001/weather/cities?names=${query}`).then(response => {\n          if (response.data) {\n            setCities(response.data);\n          }\n        }).catch(err => console.error(\"Auto-refresh failed:\", err));\n      }\n    }, 300000); // 5 minutes\n\n    return () => clearInterval(interval);\n  }, [cities]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      style: {\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter city or multiple cities (comma separated)\",\n        value: search,\n        onChange: e => {\n          const value = e.target.value;\n          setSearch(value);\n          if (value.length > 0) {\n            const filtered = allCities.filter(city => city.toLowerCase().startsWith(value.toLowerCase()));\n            setSuggestions(filtered);\n          } else {\n            setSuggestions([]);\n          }\n        },\n        onKeyPress: e => {\n          if (e.key === \"Enter\") addCity();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCity,\n        disabled: loading,\n        children: loading ? \"Loading...\" : \"Add City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"suggestion-box\",\n        children: suggestions.map((city, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => {\n            setSearch(city);\n            setSuggestions([]);\n          },\n          children: city\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"blue\"\n      },\n      children: \"Fetching weather...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(RenderingArrayOfCityObjects, {\n      cityData: cities,\n      onRemove: removeCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l8zoJ5zxkr0gpDiQjOk22WUkGtE=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderingArrayOfCityObjects\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","RandomColor","Header","Footer","TiLocationArrowOutline","CiCloudOn","jsxDEV","_jsxDEV","RenderingArrayOfCityObjects","cityData","onRemove","citylistItems","map","city","index","topDivisionColour","backgroundColor","className","children","style","cityName","country","fileName","_jsxFileName","lineNumber","columnNumber","lastUpdatedTime","description","temperature","minTemperature","maxTemperature","pressure","humidity","visibility","wind","sunrise","sunset","onClick","_c","App","_s","cities","setCities","search","setSearch","error","setError","loading","setLoading","allCities","setAllCities","suggestions","setSuggestions","get","then","response","data","catch","err","console","addCity","trimmedInput","trim","cityList","split","c","filter","newCityList","some","existing","toLowerCase","length","query","join","prev","message","finally","removeCity","interval","setInterval","clearInterval","position","type","placeholder","value","onChange","e","target","filtered","startsWith","onKeyPress","key","disabled","i","color","_c2","$RefreshReg$"],"sources":["C:/Users/shaik_t/Downloads/Telegram Desktop/weather-application-1.0.2/weather-application/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './index.css'; // CSS styling\nimport { RandomColor } from \"./styles.js\";\nimport Header from './components/Header.jsx';\nimport Footer from './components/Footer.jsx';\nimport { TiLocationArrowOutline } from \"react-icons/ti\";\nimport { CiCloudOn } from \"react-icons/ci\";\n\n// Component to render city cards\nfunction RenderingArrayOfCityObjects({ cityData, onRemove }) {\n  const citylistItems = cityData.map((city, index) => {\n    const topDivisionColour = { backgroundColor: RandomColor() };\n\n    return (\n      <div className=\"card\" key={index}>\n        <div className=\"top-division\" style={topDivisionColour}>\n          <div className='top-leftDivision'>\n            <h2 className='city-name'>{city.cityName},{city.country}</h2>\n            <p className='city-time'>{city.lastUpdatedTime}</p>\n            <div className='weather-desc'>\n              <CiCloudOn />\n              <p className='weather-description'>{city.description}</p>\n            </div>\n          </div>\n          <div className='top-rightDivision'>\n            <div className='temp-content'>\n              <h1 className='temp'>{city.temperature}°C</h1>\n              <p className='temp-min'>Temp min: {city.minTemperature}°C</p>\n              <p className='temp-max'>Temp max: {city.maxTemperature}°C</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bottom-division\">\n          <div className='bottom-content'>\n            <div className=\"extra-details\">\n              <p className='pressure'>Pressure : {city.pressure} hPa</p>\n              <p className='humidity'>Humidity : {city.humidity}%</p>\n              <p className='visibility'>Visibility : {city.visibility}</p>\n            </div>\n            <div className=\"wind\">\n              <div className='wind-content'>\n                <div className='wind-icon'><TiLocationArrowOutline /></div>\n                <div>\n                  <p className='wind-speed'>{city.wind}</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"sun\">\n              <p className='sun-rise'>Sunrise : {city.sunrise}</p>\n              <p className='sun-set'>Sunset : {city.sunset}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Remove Button */}\n        <button className=\"remove-btn\" onClick={() => onRemove(city.cityName)}>❌ Remove</button>\n      </div>\n    );\n  });\n\n  return <div className=\"card-container\">{citylistItems}</div>;\n}\n\n// Main App component\nfunction App() {\n  const [cities, setCities] = useState([]); // list of fetched cities\n  const [search, setSearch] = useState(\"\"); // search input\n  const [error, setError] = useState(\"\"); // error message\n  const [loading, setLoading] = useState(false); // loader state\n\n  // 🔹 New states for autocomplete\n  const [allCities, setAllCities] = useState([]); // all available cities from backend\n  const [suggestions, setSuggestions] = useState([]); // filtered list\n\n  // Fetch all available cities on mount\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/weather/all-cities\") // Make sure backend has this API\n      .then(response => {\n        setAllCities(response.data); // assume response is [\"India\", \"USA\", \"Canada\", ...]\n      })\n      .catch(err => console.error(\"Error fetching all cities:\", err));\n  }, []);\n\n  // Function to fetch city weather\n  const addCity = () => {\n    const trimmedInput = search.trim();\n    if (!trimmedInput) return;\n\n    const cityList = trimmedInput.split(\",\").map(c => c.trim()).filter(c => c);\n\n    const newCityList = cityList.filter(c =>\n      !cities.some(existing => existing.cityName.toLowerCase() === c.toLowerCase())\n    );\n\n    if (newCityList.length === 0) {\n      setError(\"All cities already added or invalid input\");\n      return;\n    }\n\n    const query = newCityList.join(\",\");\n\n    setLoading(true);\n    axios.get(`http://localhost:3001/weather/cities?names=${query}`)\n      .then(response => {\n        if (!response.data || response.data.length === 0) {\n          setError(\"City not found\");\n          return;\n        }\n        setCities(prev => [...prev, ...response.data]);\n        setSearch(\"\");\n        setError(\"\");\n        setSuggestions([]);\n      })\n      .catch(err => {\n        console.error(\"Error fetching cities:\", err);\n        if (err.response && err.response.data && err.response.data.message) {\n          setError(err.response.data.message);\n        } else {\n          setError(\"Error fetching cities\");\n        }\n      })\n      .finally(() => setLoading(false));\n  };\n\n  // Function to remove a city\n  const removeCity = (cityName) => {\n    setCities(prev => prev.filter(city => city.cityName !== cityName));\n  };\n\n  // Auto-refresh every 5 minutes\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (cities.length > 0) {\n        const query = cities.map(c => c.cityName).join(\",\");\n        axios.get(`http://localhost:3001/weather/cities?names=${query}`)\n          .then(response => {\n            if (response.data) {\n              setCities(response.data);\n            }\n          })\n          .catch(err => console.error(\"Auto-refresh failed:\", err));\n      }\n    }, 300000); // 5 minutes\n\n    return () => clearInterval(interval);\n  }, [cities]);\n\n  return (\n    <div className=\"app\">\n      <Header />\n\n      {/* Search bar with autocomplete */}\n      <div className=\"search-bar\" style={{ position: \"relative\" }}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter city or multiple cities (comma separated)\"\n          value={search}\n          onChange={(e) => {\n            const value = e.target.value;\n            setSearch(value);\n\n            if (value.length > 0) {\n              const filtered = allCities.filter(city =>\n                city.toLowerCase().startsWith(value.toLowerCase())\n              );\n              setSuggestions(filtered);\n            } else {\n              setSuggestions([]);\n            }\n          }}\n          onKeyPress={(e) => { if (e.key === \"Enter\") addCity(); }}\n        />\n        <button onClick={addCity} disabled={loading}>\n          {loading ? \"Loading...\" : \"Add City\"}\n        </button>\n\n        {/* Suggestion dropdown */}\n        {suggestions.length > 0 && (\n          <ul className=\"suggestion-box\">\n            {suggestions.map((city, i) => (\n              <li\n                key={i}\n                onClick={() => {\n                  setSearch(city);\n                  setSuggestions([]);\n                }}\n              >\n                {city}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      {/* Loader */}\n      {loading && <p style={{ color: \"blue\" }}>Fetching weather...</p>}\n\n      {/* Render all city cards dynamically */}\n      <RenderingArrayOfCityObjects cityData={cities} onRemove={removeCity} />\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}