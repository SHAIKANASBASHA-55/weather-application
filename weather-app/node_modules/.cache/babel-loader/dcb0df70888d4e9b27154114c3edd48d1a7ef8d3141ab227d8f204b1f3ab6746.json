{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaik_t\\\\Downloads\\\\Telegram Desktop\\\\weather-application-1.0.2\\\\weather-application\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport { RandomColor } from \"./styles.js\";\nimport Header from './components/Header.jsx';\nimport Footer from './components/Footer.jsx';\nimport { TiLocationArrowOutline } from \"react-icons/ti\";\nimport { CiCloudOn, CiCloudDrizzle, CiSun } from \"react-icons/ci\";\n\n// Forecast icons mapping (used in cards)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getWeatherIcon = (desc = \"\") => {\n  const d = desc.toLowerCase();\n  if (d.includes(\"rain\")) return /*#__PURE__*/_jsxDEV(CiCloudDrizzle, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 34\n  }, this);\n  if (d.includes(\"cloud\")) return /*#__PURE__*/_jsxDEV(CiCloudOn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 35\n  }, this);\n  if (d.includes(\"sun\")) return /*#__PURE__*/_jsxDEV(CiSun, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(CiCloudOn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n// Component to render city cards (unchanged layout, just safer)\nfunction RenderingArrayOfCityObjects({\n  cityData,\n  onRemove,\n  toggleFavorite\n}) {\n  const citylistItems = cityData.map((city, index) => {\n    var _city$temperature, _city$temperature2, _ref, _city$cityName, _ref2, _city$cityName2, _city$country, _ref3, _city$lastUpdatedTime, _ref4, _city$description, _ref5, _city$description2, _ref6, _city$temperature3, _ref7, _city$pressure, _city$humidity, _city$visibility, _ref8, _city$wind, _city$sunrise, _city$sunset;\n    // prefer a stable color stored on the city object, else fallback\n    const cardColor = city.color || RandomColor();\n\n    // defensive fallback for min/max\n    const minTemp = typeof city.minTemperature === 'number' ? city.minTemperature : ((_city$temperature = city.temperature) !== null && _city$temperature !== void 0 ? _city$temperature : 0) - 2;\n    const maxTemp = typeof city.maxTemperature === 'number' ? city.maxTemperature : ((_city$temperature2 = city.temperature) !== null && _city$temperature2 !== void 0 ? _city$temperature2 : 0) + 2;\n\n    // Mock 3-day forecast (keeps your original look)\n    const forecast = Array(3).fill().map((_, i) => ({\n      day: `Day ${i + 1}`,\n      tempMin: minTemp - i,\n      tempMax: maxTemp + i,\n      icon: getWeatherIcon(city.description)\n    }));\n    const nameKey = (_ref = (_city$cityName = city.cityName) !== null && _city$cityName !== void 0 ? _city$cityName : city.city) !== null && _ref !== void 0 ? _ref : `city-${index}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card animate-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-division\",\n        style: {\n          background: cardColor\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-leftDivision\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"city-name\",\n            children: [(_ref2 = (_city$cityName2 = city.cityName) !== null && _city$cityName2 !== void 0 ? _city$cityName2 : city.city) !== null && _ref2 !== void 0 ? _ref2 : \"Unknown\", \", \", (_city$country = city.country) !== null && _city$country !== void 0 ? _city$country : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"city-time\",\n            children: (_ref3 = (_city$lastUpdatedTime = city.lastUpdatedTime) !== null && _city$lastUpdatedTime !== void 0 ? _city$lastUpdatedTime : city.lastUpdated) !== null && _ref3 !== void 0 ? _ref3 : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-desc\",\n            children: [getWeatherIcon((_ref4 = (_city$description = city.description) !== null && _city$description !== void 0 ? _city$description : city.weather) !== null && _ref4 !== void 0 ? _ref4 : \"\"), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"weather-description\",\n              children: (_ref5 = (_city$description2 = city.description) !== null && _city$description2 !== void 0 ? _city$description2 : city.weather) !== null && _ref5 !== void 0 ? _ref5 : \"No description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-rightDivision\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"temp\",\n              children: [(_ref6 = (_city$temperature3 = city.temperature) !== null && _city$temperature3 !== void 0 ? _city$temperature3 : city.temp) !== null && _ref6 !== void 0 ? _ref6 : \"--\", \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"temp-min\",\n              children: [\"Min: \", minTemp, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"temp-max\",\n              children: [\"Max: \", maxTemp, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-division\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extra-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"pressure\",\n              children: [\"Pressure : \", (_ref7 = (_city$pressure = city.pressure) !== null && _city$pressure !== void 0 ? _city$pressure : city.pres) !== null && _ref7 !== void 0 ? _ref7 : \"--\", \" hPa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"humidity\",\n              children: [\"Humidity : \", (_city$humidity = city.humidity) !== null && _city$humidity !== void 0 ? _city$humidity : \"--\", \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"visibility\",\n              children: [\"Visibility : \", (_city$visibility = city.visibility) !== null && _city$visibility !== void 0 ? _city$visibility : \"--\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wind\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wind-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wind-icon\",\n                children: /*#__PURE__*/_jsxDEV(TiLocationArrowOutline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"wind-speed\",\n                  children: (_ref8 = (_city$wind = city.wind) !== null && _city$wind !== void 0 ? _city$wind : city.wind_speed) !== null && _ref8 !== void 0 ? _ref8 : \"--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sun\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sun-rise\",\n              children: [\"Sunrise : \", (_city$sunrise = city.sunrise) !== null && _city$sunrise !== void 0 ? _city$sunrise : \"--\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sun-set\",\n              children: [\"Sunset : \", (_city$sunset = city.sunset) !== null && _city$sunset !== void 0 ? _city$sunset : \"--\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-section\",\n        children: forecast.map((f, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: f.day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), f.icon, /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [f.tempMin, \"\\xB0C / \", f.tempMax, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"favorite-btn\",\n          onClick: () => {\n            var _city$cityName3;\n            return toggleFavorite((_city$cityName3 = city.cityName) !== null && _city$cityName3 !== void 0 ? _city$cityName3 : city.city);\n          },\n          children: city.favorite ? \"★ Favorite\" : \"☆ Favorite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-btn\",\n          onClick: () => {\n            var _city$cityName4;\n            return onRemove((_city$cityName4 = city.cityName) !== null && _city$cityName4 !== void 0 ? _city$cityName4 : city.city);\n          },\n          children: \"\\u274C Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, nameKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: citylistItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n}\n\n// Main App component (keeps your original API & behavior, adds features)\n_c = RenderingArrayOfCityObjects;\nfunction App() {\n  _s();\n  const [cities, setCities] = useState([]); // list of cities (keeps your structure)\n  const [search, setSearch] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // UI extras\n  const [showFavDropdown, setShowFavDropdown] = useState(false);\n  const [showOnlyFavorites, setShowOnlyFavorites] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // load saved cities & settings once (if any)\n  useEffect(() => {\n    try {\n      const saved = localStorage.getItem('weather_cities_v1');\n      if (saved) {\n        const parsed = JSON.parse(saved);\n        if (Array.isArray(parsed)) setCities(parsed);\n      }\n      const onlyFav = localStorage.getItem('weather_showOnlyFavorites_v1');\n      if (onlyFav === 'true') setShowOnlyFavorites(true);\n    } catch (e) {\n      console.warn(\"Failed to load saved cities\", e);\n    }\n  }, []);\n\n  // persist cities & small UI flag\n  useEffect(() => {\n    try {\n      localStorage.setItem('weather_cities_v1', JSON.stringify(cities));\n      localStorage.setItem('weather_showOnlyFavorites_v1', showOnlyFavorites ? 'true' : 'false');\n    } catch (e) {\n      console.warn(\"Failed to save cities\", e);\n    }\n  }, [cities, showOnlyFavorites]);\n\n  // click outside to close dropdown\n  useEffect(() => {\n    function handleClickOutside(e) {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setShowFavDropdown(false);\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Function to fetch city weather (keeps your exact backend call)\n  const addCity = () => {\n    const trimmedInput = search.trim();\n    if (!trimmedInput) return;\n    const cityList = trimmedInput.split(\",\").map(c => c.trim()).filter(c => c);\n    const normalizedExisting = cities.map(c => {\n      var _ref9, _c$cityName;\n      return ((_ref9 = (_c$cityName = c.cityName) !== null && _c$cityName !== void 0 ? _c$cityName : c.city) !== null && _ref9 !== void 0 ? _ref9 : \"\").toLowerCase();\n    });\n    const newCityList = cityList.filter(c => !normalizedExisting.includes(c.toLowerCase()));\n    if (newCityList.length === 0) {\n      setError(\"All cities already added or invalid input\");\n      return;\n    }\n    const query = newCityList.join(\",\");\n    setLoading(true);\n    axios.get(`http://localhost:3001/weather/cities?names=${query}`).then(response => {\n      if (!response.data || response.data.length === 0) {\n        setError(\"City not found\");\n        return;\n      }\n      // add stable color and favorite flag (non-destructive)\n      const updatedData = response.data.map(c => ({\n        ...c,\n        favorite: !!c.favorite,\n        color: c.color || RandomColor()\n      }));\n      setCities(prev => [...prev, ...updatedData]);\n      setSearch(\"\");\n      setError(\"\");\n    }).catch(err => {\n      var _err$response, _err$response$data;\n      console.error(\"Error fetching cities:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Error fetching cities\");\n    }).finally(() => setLoading(false));\n  };\n\n  // Remove city (keeps your remove behavior)\n  const removeCity = cityName => {\n    setCities(prev => prev.filter(city => {\n      var _city$cityName5;\n      return ((_city$cityName5 = city.cityName) !== null && _city$cityName5 !== void 0 ? _city$cityName5 : city.city) !== cityName;\n    }));\n  };\n\n  // Toggle favorite (keeps your original functionality)\n  const toggleFavorite = cityName => {\n    setCities(prev => prev.map(city => {\n      var _city$cityName6;\n      const name = (_city$cityName6 = city.cityName) !== null && _city$cityName6 !== void 0 ? _city$cityName6 : city.city;\n      if (name === cityName) return {\n        ...city,\n        favorite: !city.favorite\n      };\n      return city;\n    }));\n  };\n\n  // Auto-refresh every 5 minutes (preserve favorite & color)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (cities.length === 0) return;\n      const query = cities.map(c => {\n        var _c$cityName2;\n        return (_c$cityName2 = c.cityName) !== null && _c$cityName2 !== void 0 ? _c$cityName2 : c.city;\n      }).join(\",\");\n      axios.get(`http://localhost:3001/weather/cities?names=${query}`).then(response => {\n        if (response.data) {\n          const refreshed = response.data.map(c => {\n            const old = cities.find(o => {\n              var _o$cityName, _c$cityName3;\n              return ((_o$cityName = o.cityName) !== null && _o$cityName !== void 0 ? _o$cityName : o.city) === ((_c$cityName3 = c.cityName) !== null && _c$cityName3 !== void 0 ? _c$cityName3 : c.city);\n            });\n            return {\n              ...c,\n              favorite: (old === null || old === void 0 ? void 0 : old.favorite) || false,\n              color: (old === null || old === void 0 ? void 0 : old.color) || RandomColor()\n            };\n          });\n          setCities(refreshed);\n        }\n      }).catch(err => {\n        console.error(\"Auto-refresh failed:\", err);\n      });\n    }, 300000); // 5 minutes\n\n    return () => clearInterval(interval);\n  }, [cities]);\n\n  // derived lists\n  const favoriteCities = cities.filter(c => c.favorite);\n  const normalCities = cities.filter(c => !c.favorite);\n\n  // Dropdown actions\n  const markAllFavorite = () => setCities(prev => prev.map(c => ({\n    ...c,\n    favorite: true\n  })));\n  const clearFavorites = () => setCities(prev => prev.map(c => ({\n    ...c,\n    favorite: false\n  })));\n  const copyFavoritesToClipboard = () => {\n    const text = favoriteCities.map(f => {\n      var _f$cityName;\n      return (_f$cityName = f.cityName) !== null && _f$cityName !== void 0 ? _f$cityName : f.city;\n    }).join(\", \");\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(text).then(() => {\n        alert(text ? \"Favorites copied to clipboard\" : \"No favorites to copy\");\n      }).catch(() => alert(text || \"No favorites\"));\n    } else {\n      alert(text || \"No favorites\");\n    }\n  };\n\n  // toggle view mode (favorites only / all)\n  const toggleShowOnlyFavorites = () => {\n    setShowOnlyFavorites(v => !v);\n    setShowFavDropdown(false);\n  };\n\n  // Which cities to show on page\n  const showFavoritesOnly = showOnlyFavorites;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        margin: '8px 20px 0 0'\n      },\n      ref: dropdownRef,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        title: \"Favorites & options\",\n        className: \"favorite-btn\",\n        onClick: () => setShowFavDropdown(v => !v),\n        style: {\n          padding: '8px 12px',\n          backgroundColor: '#6c5dd3',\n          color: '#fff'\n        },\n        children: [\"\\u2605 Favorites (\", favoriteCities.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), showFavDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"favorites-dropdown\",\n        style: {\n          right: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fav-opt\",\n          onClick: () => {\n            toggleShowOnlyFavorites();\n          },\n          children: showOnlyFavorites ? \"Show All Cities\" : \"Show Only Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fav-opt\",\n          onClick: () => {\n            markAllFavorite();\n            setShowFavDropdown(false);\n          },\n          children: \"Mark All Favorite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fav-opt\",\n          onClick: () => {\n            clearFavorites();\n            setShowFavDropdown(false);\n          },\n          children: \"Clear Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fav-opt\",\n          onClick: () => {\n            copyFavoritesToClipboard();\n            setShowFavDropdown(false);\n          },\n          children: \"Copy Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter city or multiple cities (comma separated)\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        onKeyPress: e => {\n          if (e.key === \"Enter\") addCity();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCity,\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 22\n        }, this) : \"Add City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }, this), !showFavoritesOnly && favoriteCities.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"\\u2605 Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RenderingArrayOfCityObjects, {\n        cityData: favoriteCities,\n        onRemove: removeCity,\n        toggleFavorite: toggleFavorite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), !showFavoritesOnly && /*#__PURE__*/_jsxDEV(RenderingArrayOfCityObjects, {\n      cityData: normalCities,\n      onRemove: removeCity,\n      toggleFavorite: toggleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this), showFavoritesOnly && favoriteCities.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\",\n        color: \"#fff\"\n      },\n      children: \"No favorites yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this), showFavoritesOnly && favoriteCities.length > 0 && /*#__PURE__*/_jsxDEV(RenderingArrayOfCityObjects, {\n      cityData: favoriteCities,\n      onRemove: removeCity,\n      toggleFavorite: toggleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oB3Yac58fhmDvo7msWlCtd5tJnA=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderingArrayOfCityObjects\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","RandomColor","Header","Footer","TiLocationArrowOutline","CiCloudOn","CiCloudDrizzle","CiSun","jsxDEV","_jsxDEV","Fragment","_Fragment","getWeatherIcon","desc","d","toLowerCase","includes","fileName","_jsxFileName","lineNumber","columnNumber","RenderingArrayOfCityObjects","cityData","onRemove","toggleFavorite","citylistItems","map","city","index","_city$temperature","_city$temperature2","_ref","_city$cityName","_ref2","_city$cityName2","_city$country","_ref3","_city$lastUpdatedTime","_ref4","_city$description","_ref5","_city$description2","_ref6","_city$temperature3","_ref7","_city$pressure","_city$humidity","_city$visibility","_ref8","_city$wind","_city$sunrise","_city$sunset","cardColor","color","minTemp","minTemperature","temperature","maxTemp","maxTemperature","forecast","Array","fill","_","i","day","tempMin","tempMax","icon","description","nameKey","cityName","className","children","style","background","country","lastUpdatedTime","lastUpdated","weather","temp","pressure","pres","humidity","visibility","wind","wind_speed","sunrise","sunset","f","onClick","_city$cityName3","favorite","_city$cityName4","_c","App","_s","cities","setCities","search","setSearch","error","setError","loading","setLoading","showFavDropdown","setShowFavDropdown","showOnlyFavorites","setShowOnlyFavorites","dropdownRef","saved","localStorage","getItem","parsed","JSON","parse","isArray","onlyFav","e","console","warn","setItem","stringify","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","addCity","trimmedInput","trim","cityList","split","c","filter","normalizedExisting","_ref9","_c$cityName","newCityList","length","query","join","get","then","response","data","updatedData","prev","catch","err","_err$response","_err$response$data","message","finally","removeCity","_city$cityName5","_city$cityName6","name","interval","setInterval","_c$cityName2","refreshed","old","find","o","_o$cityName","_c$cityName3","clearInterval","favoriteCities","normalCities","markAllFavorite","clearFavorites","copyFavoritesToClipboard","text","_f$cityName","navigator","clipboard","writeText","alert","toggleShowOnlyFavorites","v","showFavoritesOnly","position","display","justifyContent","margin","ref","title","padding","backgroundColor","right","type","placeholder","value","onChange","onKeyPress","key","disabled","textAlign","_c2","$RefreshReg$"],"sources":["C:/Users/shaik_t/Downloads/Telegram Desktop/weather-application-1.0.2/weather-application/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport { RandomColor } from \"./styles.js\";\nimport Header from './components/Header.jsx';\nimport Footer from './components/Footer.jsx';\nimport { TiLocationArrowOutline } from \"react-icons/ti\";\nimport { CiCloudOn, CiCloudDrizzle, CiSun } from \"react-icons/ci\";\n\n// Forecast icons mapping (used in cards)\nconst getWeatherIcon = (desc = \"\") => {\n  const d = desc.toLowerCase();\n  if (d.includes(\"rain\")) return <CiCloudDrizzle />;\n  if (d.includes(\"cloud\")) return <CiCloudOn />;\n  if (d.includes(\"sun\")) return <CiSun />;\n  return <CiCloudOn />;\n};\n\n// Component to render city cards (unchanged layout, just safer)\nfunction RenderingArrayOfCityObjects({ cityData, onRemove, toggleFavorite }) {\n  const citylistItems = cityData.map((city, index) => {\n    // prefer a stable color stored on the city object, else fallback\n    const cardColor = city.color || RandomColor();\n\n    // defensive fallback for min/max\n    const minTemp = typeof city.minTemperature === 'number' ? city.minTemperature : (city.temperature ?? 0) - 2;\n    const maxTemp = typeof city.maxTemperature === 'number' ? city.maxTemperature : (city.temperature ?? 0) + 2;\n\n    // Mock 3-day forecast (keeps your original look)\n    const forecast = Array(3).fill().map((_, i) => ({\n      day: `Day ${i + 1}`,\n      tempMin: minTemp - i,\n      tempMax: maxTemp + i,\n      icon: getWeatherIcon(city.description)\n    }));\n\n    const nameKey = city.cityName ?? city.city ?? `city-${index}`;\n\n    return (\n      <div className=\"card animate-card\" key={nameKey}>\n        <div className=\"top-division\" style={{ background: cardColor }}>\n          <div className='top-leftDivision'>\n            <h2 className='city-name'>{city.cityName ?? city.city ?? \"Unknown\"}, {city.country ?? \"\"}</h2>\n            <p className='city-time'>{city.lastUpdatedTime ?? city.lastUpdated ?? \"\"}</p>\n            <div className='weather-desc'>\n              {getWeatherIcon(city.description ?? city.weather ?? \"\")}\n              <p className='weather-description'>{city.description ?? city.weather ?? \"No description\"}</p>\n            </div>\n          </div>\n          <div className='top-rightDivision'>\n            <div className='temp-content'>\n              <h1 className='temp'>{(city.temperature ?? city.temp ?? \"--\")}°C</h1>\n              <p className='temp-min'>Min: {minTemp}°C</p>\n              <p className='temp-max'>Max: {maxTemp}°C</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bottom-division\">\n          <div className='bottom-content'>\n            <div className=\"extra-details\">\n              <p className='pressure'>Pressure : {city.pressure ?? city.pres ?? \"--\"} hPa</p>\n              <p className='humidity'>Humidity : {city.humidity ?? \"--\"}%</p>\n              <p className='visibility'>Visibility : {city.visibility ?? \"--\"}</p>\n            </div>\n            <div className=\"wind\">\n              <div className='wind-content'>\n                <div className='wind-icon'><TiLocationArrowOutline /></div>\n                <div><p className='wind-speed'>{city.wind ?? city.wind_speed ?? \"--\"}</p></div>\n              </div>\n            </div>\n            <div className=\"sun\">\n              <p className='sun-rise'>Sunrise : {city.sunrise ?? \"--\"}</p>\n              <p className='sun-set'>Sunset : {city.sunset ?? \"--\"}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Forecast Section */}\n        <div className=\"forecast-section\">\n          {forecast.map((f, i) => (\n            <div className=\"forecast-card\" key={i}>\n              <p>{f.day}</p>\n              {f.icon}\n              <p>{f.tempMin}°C / {f.tempMax}°C</p>\n            </div>\n          ))}\n        </div>\n\n        {/* Favorite & Remove Buttons */}\n        <div className=\"card-buttons\">\n          <button className=\"favorite-btn\" onClick={() => toggleFavorite(city.cityName ?? city.city)}>\n            {city.favorite ? \"★ Favorite\" : \"☆ Favorite\"}\n          </button>\n          <button className=\"remove-btn\" onClick={() => onRemove(city.cityName ?? city.city)}>❌ Remove</button>\n        </div>\n      </div>\n    );\n  });\n\n  return <div className=\"card-container\">{citylistItems}</div>;\n}\n\n// Main App component (keeps your original API & behavior, adds features)\nfunction App() {\n  const [cities, setCities] = useState([]); // list of cities (keeps your structure)\n  const [search, setSearch] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // UI extras\n  const [showFavDropdown, setShowFavDropdown] = useState(false);\n  const [showOnlyFavorites, setShowOnlyFavorites] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // load saved cities & settings once (if any)\n  useEffect(() => {\n    try {\n      const saved = localStorage.getItem('weather_cities_v1');\n      if (saved) {\n        const parsed = JSON.parse(saved);\n        if (Array.isArray(parsed)) setCities(parsed);\n      }\n      const onlyFav = localStorage.getItem('weather_showOnlyFavorites_v1');\n      if (onlyFav === 'true') setShowOnlyFavorites(true);\n    } catch (e) {\n      console.warn(\"Failed to load saved cities\", e);\n    }\n  }, []);\n\n  // persist cities & small UI flag\n  useEffect(() => {\n    try {\n      localStorage.setItem('weather_cities_v1', JSON.stringify(cities));\n      localStorage.setItem('weather_showOnlyFavorites_v1', showOnlyFavorites ? 'true' : 'false');\n    } catch (e) {\n      console.warn(\"Failed to save cities\", e);\n    }\n  }, [cities, showOnlyFavorites]);\n\n  // click outside to close dropdown\n  useEffect(() => {\n    function handleClickOutside(e) {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setShowFavDropdown(false);\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Function to fetch city weather (keeps your exact backend call)\n  const addCity = () => {\n    const trimmedInput = search.trim();\n    if (!trimmedInput) return;\n\n    const cityList = trimmedInput.split(\",\").map(c => c.trim()).filter(c => c);\n    const normalizedExisting = cities.map(c => (c.cityName ?? c.city ?? \"\").toLowerCase());\n    const newCityList = cityList.filter(c => !normalizedExisting.includes(c.toLowerCase()));\n\n    if (newCityList.length === 0) {\n      setError(\"All cities already added or invalid input\");\n      return;\n    }\n\n    const query = newCityList.join(\",\");\n    setLoading(true);\n    axios.get(`http://localhost:3001/weather/cities?names=${query}`)\n      .then(response => {\n        if (!response.data || response.data.length === 0) {\n          setError(\"City not found\");\n          return;\n        }\n        // add stable color and favorite flag (non-destructive)\n        const updatedData = response.data.map(c => ({\n          ...c,\n          favorite: !!c.favorite,\n          color: c.color || RandomColor()\n        }));\n\n        setCities(prev => [...prev, ...updatedData]);\n        setSearch(\"\");\n        setError(\"\");\n      })\n      .catch(err => {\n        console.error(\"Error fetching cities:\", err);\n        setError(err.response?.data?.message || \"Error fetching cities\");\n      })\n      .finally(() => setLoading(false));\n  };\n\n  // Remove city (keeps your remove behavior)\n  const removeCity = (cityName) => {\n    setCities(prev => prev.filter(city => (city.cityName ?? city.city) !== cityName));\n  };\n\n  // Toggle favorite (keeps your original functionality)\n  const toggleFavorite = (cityName) => {\n    setCities(prev => prev.map(city => {\n      const name = city.cityName ?? city.city;\n      if (name === cityName) return { ...city, favorite: !city.favorite };\n      return city;\n    }));\n  };\n\n  // Auto-refresh every 5 minutes (preserve favorite & color)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (cities.length === 0) return;\n      const query = cities.map(c => (c.cityName ?? c.city)).join(\",\");\n      axios.get(`http://localhost:3001/weather/cities?names=${query}`)\n        .then(response => {\n          if (response.data) {\n            const refreshed = response.data.map(c => {\n              const old = cities.find(o => (o.cityName ?? o.city) === (c.cityName ?? c.city));\n              return {\n                ...c,\n                favorite: old?.favorite || false,\n                color: old?.color || RandomColor()\n              };\n            });\n            setCities(refreshed);\n          }\n        })\n        .catch(err => {\n          console.error(\"Auto-refresh failed:\", err);\n        });\n    }, 300000); // 5 minutes\n\n    return () => clearInterval(interval);\n  }, [cities]);\n\n  // derived lists\n  const favoriteCities = cities.filter(c => c.favorite);\n  const normalCities = cities.filter(c => !c.favorite);\n\n  // Dropdown actions\n  const markAllFavorite = () => setCities(prev => prev.map(c => ({ ...c, favorite: true })));\n  const clearFavorites = () => setCities(prev => prev.map(c => ({ ...c, favorite: false })));\n  const copyFavoritesToClipboard = () => {\n    const text = favoriteCities.map(f => (f.cityName ?? f.city)).join(\", \");\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(text).then(() => {\n        alert(text ? \"Favorites copied to clipboard\" : \"No favorites to copy\");\n      }).catch(() => alert(text || \"No favorites\"));\n    } else {\n      alert(text || \"No favorites\");\n    }\n  };\n\n  // toggle view mode (favorites only / all)\n  const toggleShowOnlyFavorites = () => {\n    setShowOnlyFavorites(v => !v);\n    setShowFavDropdown(false);\n  };\n\n  // Which cities to show on page\n  const showFavoritesOnly = showOnlyFavorites;\n\n  return (\n    <div className=\"app\">\n      <Header />\n\n      {/* Favorites & options dropdown (kept small & non-invasive) */}\n      <div style={{ position: 'relative', display: 'flex', justifyContent: 'flex-end', margin: '8px 20px 0 0' }} ref={dropdownRef}>\n        <button\n          title=\"Favorites & options\"\n          className=\"favorite-btn\"\n          onClick={() => setShowFavDropdown(v => !v)}\n          style={{ padding: '8px 12px', backgroundColor: '#6c5dd3', color: '#fff' }}\n        >\n          ★ Favorites ({favoriteCities.length})\n        </button>\n\n        {showFavDropdown && (\n          <div className=\"favorites-dropdown\" style={{ right: 0 }}>\n            <button className=\"fav-opt\" onClick={() => { toggleShowOnlyFavorites(); }}>\n              {showOnlyFavorites ? \"Show All Cities\" : \"Show Only Favorites\"}\n            </button>\n            <button className=\"fav-opt\" onClick={() => { markAllFavorite(); setShowFavDropdown(false); }}>Mark All Favorite</button>\n            <button className=\"fav-opt\" onClick={() => { clearFavorites(); setShowFavDropdown(false); }}>Clear Favorites</button>\n            <button className=\"fav-opt\" onClick={() => { copyFavoritesToClipboard(); setShowFavDropdown(false); }}>Copy Favorites</button>\n          </div>\n        )}\n      </div>\n\n      {/* Search bar (unchanged) */}\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter city or multiple cities (comma separated)\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          onKeyPress={(e) => { if (e.key === \"Enter\") addCity(); }}\n        />\n        <button onClick={addCity} disabled={loading}>\n          {loading ? <span className=\"loader\"></span> : \"Add City\"}\n        </button>\n      </div>\n\n      {error && <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>}\n\n      {/* Favorites Panel (if not showing only favorites and favorites exist) */}\n      {!showFavoritesOnly && favoriteCities.length > 0 && (\n        <>\n          <h3 style={{ textAlign: \"center\" }}>★ Favorites</h3>\n          <RenderingArrayOfCityObjects cityData={favoriteCities} onRemove={removeCity} toggleFavorite={toggleFavorite} />\n        </>\n      )}\n\n      {/* Normal Cities (or when showing all) */}\n      {!showFavoritesOnly && (\n        <RenderingArrayOfCityObjects cityData={normalCities} onRemove={removeCity} toggleFavorite={toggleFavorite} />\n      )}\n\n      {/* If showing only favorites */}\n      {showFavoritesOnly && favoriteCities.length === 0 && (\n        <p style={{ textAlign: \"center\", color: \"#fff\" }}>No favorites yet</p>\n      )}\n      {showFavoritesOnly && favoriteCities.length > 0 && (\n        <RenderingArrayOfCityObjects cityData={favoriteCities} onRemove={removeCity} toggleFavorite={toggleFavorite} />\n      )}\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}