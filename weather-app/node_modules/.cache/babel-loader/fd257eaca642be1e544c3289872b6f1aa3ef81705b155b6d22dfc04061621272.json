{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaik_t\\\\Downloads\\\\Telegram Desktop\\\\weather-application-1.0.2\\\\weather-application\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport { RandomColor } from \"./styles.js\";\nimport Header from './components/Header.jsx';\nimport Footer from './components/Footer.jsx';\nimport { TiLocationArrowOutline } from \"react-icons/ti\";\nimport { CiCloudOn, CiCloudDrizzle, CiSun } from \"react-icons/ci\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"b81b6799c2282dbb9792e9d52e8d2101\"; // 🔑 Your OpenWeather API key\n\n// Forecast icons mapping\nconst getWeatherIcon = desc => {\n  const d = desc.toLowerCase();\n  if (d.includes(\"rain\")) return /*#__PURE__*/_jsxDEV(CiCloudDrizzle, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 34\n  }, this);\n  if (d.includes(\"cloud\")) return /*#__PURE__*/_jsxDEV(CiCloudOn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 35\n  }, this);\n  if (d.includes(\"sun\")) return /*#__PURE__*/_jsxDEV(CiSun, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(CiCloudOn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n\n// Component to render city cards\nfunction RenderingArrayOfCityObjects({\n  cityData,\n  onRemove,\n  toggleFavorite\n}) {\n  const citylistItems = cityData.map((city, index) => {\n    const cardColor = RandomColor();\n    const forecast = Array(3).fill().map((_, i) => ({\n      day: `Day ${i + 1}`,\n      tempMin: city.minTemperature - i,\n      tempMax: city.maxTemperature + i,\n      icon: getWeatherIcon(city.description)\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card animate-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-division\",\n          style: {\n            background: cardColor\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-leftDivision\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"city-name\",\n              children: [city.cityName, \",\", city.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"city-time\",\n              children: city.lastUpdatedTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-desc\",\n              children: [getWeatherIcon(city.description), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"weather-description\",\n                children: city.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-rightDivision\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"temp\",\n                children: [city.temperature, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"temp-min\",\n                children: [\"Min: \", city.minTemperature, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"temp-max\",\n                children: [\"Max: \", city.maxTemperature, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-division\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"extra-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"pressure\",\n                children: [\"Pressure : \", city.pressure, \" hPa\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"humidity\",\n                children: [\"Humidity : \", city.humidity, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"visibility\",\n                children: [\"Visibility : \", city.visibility]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wind\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wind-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"wind-icon\",\n                  children: /*#__PURE__*/_jsxDEV(TiLocationArrowOutline, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"wind-speed\",\n                    children: city.wind\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sun\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"sun-rise\",\n                children: [\"Sunrise : \", city.sunrise]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"sun-set\",\n                children: [\"Sunset : \", city.sunset]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-section\",\n          children: forecast.map((f, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: f.day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), f.icon, /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [f.tempMin, \"\\xB0C / \", f.tempMax, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"favorite-btn\",\n            onClick: () => toggleFavorite(city.cityName),\n            children: city.favorite ? \"★ Favorite\" : \"☆ Favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-btn\",\n            onClick: () => onRemove(city.cityName),\n            children: \"\\u274C Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"city-grid\",\n    children: citylistItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 10\n  }, this);\n}\n\n// Main App component\n_c = RenderingArrayOfCityObjects;\nfunction App() {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n\n  // Detect current location weather on load\n  useEffect(() => {\n    detectLocationWeather(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Function: detect location and fetch weather\n  const detectLocationWeather = (isAuto = false) => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async pos => {\n        const {\n          latitude,\n          longitude\n        } = pos.coords;\n        try {\n          const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`);\n          const data = res.data;\n          const cityObj = {\n            cityName: data.name,\n            country: data.sys.country,\n            temperature: Math.round(data.main.temp),\n            minTemperature: Math.round(data.main.temp_min),\n            maxTemperature: Math.round(data.main.temp_max),\n            description: data.weather[0].description,\n            pressure: data.main.pressure,\n            humidity: data.main.humidity,\n            visibility: `${data.visibility / 1000} km`,\n            wind: `${data.wind.speed} m/s`,\n            sunrise: new Date(data.sys.sunrise * 1000).toLocaleTimeString(),\n            sunset: new Date(data.sys.sunset * 1000).toLocaleTimeString(),\n            lastUpdatedTime: new Date().toLocaleTimeString(),\n            favorite: false\n          };\n          setCities(prev => {\n            if (isAuto) return [cityObj]; // overwrite on first load\n            if (prev.some(c => c.cityName === cityObj.cityName)) return prev; // avoid duplicates\n            return [...prev, cityObj];\n          });\n        } catch (err) {\n          console.error(\"Location fetch failed:\", err);\n          if (!isAuto) setError(\"Could not fetch your current location weather\");\n        }\n      });\n    }\n  };\n\n  // Function to fetch city weather\n  const addCity = () => {\n    const trimmedInput = search.trim();\n    if (!trimmedInput) return;\n    const cityList = trimmedInput.split(\",\").map(c => c.trim()).filter(c => c);\n    const newCityList = cityList.filter(c => !cities.some(existing => existing.cityName.toLowerCase() === c.toLowerCase()));\n    if (newCityList.length === 0) {\n      setError(\"All cities already added or invalid input\");\n      return;\n    }\n    const query = newCityList.join(\",\");\n    setLoading(true);\n    axios.get(`http://localhost:3001/weather/cities?names=${query}`).then(response => {\n      if (!response.data || response.data.length === 0) {\n        setError(\"City not found\");\n        return;\n      }\n      const updatedData = response.data.map(c => ({\n        ...c,\n        favorite: false\n      }));\n      setCities(prev => [...prev, ...updatedData]);\n      setSearch(\"\");\n      setError(\"\");\n    }).catch(err => {\n      var _err$response, _err$response$data;\n      console.error(\"Error fetching cities:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Error fetching cities\");\n    }).finally(() => setLoading(false));\n  };\n\n  // Remove city\n  const removeCity = cityName => {\n    setCities(prev => prev.filter(city => city.cityName !== cityName));\n  };\n\n  // Toggle favorite\n  const toggleFavorite = cityName => {\n    setCities(prev => prev.map(city => city.cityName === cityName ? {\n      ...city,\n      favorite: !city.favorite\n    } : city));\n  };\n\n  // Auto-refresh every 5 minutes\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (cities.length > 0) {\n        const query = cities.map(c => c.cityName).join(\",\");\n        axios.get(`http://localhost:3001/weather/cities?names=${query}`).then(response => {\n          if (response.data) {\n            const refreshedData = response.data.map(c => {\n              const oldCity = cities.find(old => old.cityName === c.cityName);\n              return {\n                ...c,\n                favorite: (oldCity === null || oldCity === void 0 ? void 0 : oldCity.favorite) || false\n              };\n            });\n            setCities(refreshedData);\n          }\n        }).catch(err => console.error(\"Auto-refresh failed:\", err));\n      }\n    }, 300000);\n    return () => clearInterval(interval);\n  }, [cities]);\n  const favoriteCities = cities.filter(c => c.favorite);\n  const normalCities = cities.filter(c => !c.favorite);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${sidebarOpen ? \"open\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: () => setSidebarOpen(false),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83C\\uDF0D Weather Sidebar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Cities: \", cities.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Favorites: \", favoriteCities.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => detectLocationWeather(false),\n        children: \"\\uD83D\\uDCCD Detect Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"sidebar-toggle\",\n      onClick: () => setSidebarOpen(true),\n      children: \"\\u2630\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter city or multiple cities (comma separated)\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        onKeyPress: e => {\n          if (e.key === \"Enter\") addCity();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCity,\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 22\n        }, this) : \"Add City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }, this), favoriteCities.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"\\u2605 Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RenderingArrayOfCityObjects, {\n        cityData: favoriteCities,\n        onRemove: removeCity,\n        toggleFavorite: toggleFavorite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(RenderingArrayOfCityObjects, {\n      cityData: normalCities,\n      onRemove: removeCity,\n      toggleFavorite: toggleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sF6dNlX+1AjhfB0ZppvyAsB7yQM=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderingArrayOfCityObjects\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","RandomColor","Header","Footer","TiLocationArrowOutline","CiCloudOn","CiCloudDrizzle","CiSun","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","getWeatherIcon","desc","d","toLowerCase","includes","fileName","_jsxFileName","lineNumber","columnNumber","RenderingArrayOfCityObjects","cityData","onRemove","toggleFavorite","citylistItems","map","city","index","cardColor","forecast","Array","fill","_","i","day","tempMin","minTemperature","tempMax","maxTemperature","icon","description","className","children","style","background","cityName","country","lastUpdatedTime","temperature","pressure","humidity","visibility","wind","sunrise","sunset","f","onClick","favorite","_c","App","_s","cities","setCities","search","setSearch","error","setError","loading","setLoading","sidebarOpen","setSidebarOpen","detectLocationWeather","isAuto","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","coords","res","get","data","cityObj","name","sys","Math","round","main","temp","temp_min","temp_max","weather","speed","Date","toLocaleTimeString","prev","some","c","err","console","addCity","trimmedInput","trim","cityList","split","filter","newCityList","existing","length","query","join","then","response","updatedData","catch","_err$response","_err$response$data","message","finally","removeCity","interval","setInterval","refreshedData","oldCity","find","old","clearInterval","favoriteCities","normalCities","type","placeholder","value","onChange","e","target","onKeyPress","key","disabled","color","textAlign","_c2","$RefreshReg$"],"sources":["C:/Users/shaik_t/Downloads/Telegram Desktop/weather-application-1.0.2/weather-application/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport { RandomColor } from \"./styles.js\";\nimport Header from './components/Header.jsx';\nimport Footer from './components/Footer.jsx';\nimport { TiLocationArrowOutline } from \"react-icons/ti\";\nimport { CiCloudOn, CiCloudDrizzle, CiSun } from \"react-icons/ci\";\n\nconst API_KEY = \"b81b6799c2282dbb9792e9d52e8d2101\"; // 🔑 Your OpenWeather API key\n\n// Forecast icons mapping\nconst getWeatherIcon = (desc) => {\n  const d = desc.toLowerCase();\n  if (d.includes(\"rain\")) return <CiCloudDrizzle />;\n  if (d.includes(\"cloud\")) return <CiCloudOn />;\n  if (d.includes(\"sun\")) return <CiSun />;\n  return <CiCloudOn />;\n};\n\n// Component to render city cards\nfunction RenderingArrayOfCityObjects({ cityData, onRemove, toggleFavorite }) {\n  const citylistItems = cityData.map((city, index) => {\n    const cardColor = RandomColor();\n\n    const forecast = Array(3).fill().map((_, i) => ({\n      day: `Day ${i + 1}`,\n      tempMin: city.minTemperature - i,\n      tempMax: city.maxTemperature + i,\n      icon: getWeatherIcon(city.description)\n    }));\n\n    return (\n      <div className=\"city-panel\" key={index}>\n        <div className=\"card animate-card\">\n          <div className=\"top-division\" style={{ background: cardColor }}>\n            <div className='top-leftDivision'>\n              <h2 className='city-name'>{city.cityName},{city.country}</h2>\n              <p className='city-time'>{city.lastUpdatedTime}</p>\n              <div className='weather-desc'>\n                {getWeatherIcon(city.description)}\n                <p className='weather-description'>{city.description}</p>\n              </div>\n            </div>\n            <div className='top-rightDivision'>\n              <div className='temp-content'>\n                <h1 className='temp'>{city.temperature}°C</h1>\n                <p className='temp-min'>Min: {city.minTemperature}°C</p>\n                <p className='temp-max'>Max: {city.maxTemperature}°C</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bottom-division\">\n            <div className='bottom-content'>\n              <div className=\"extra-details\">\n                <p className='pressure'>Pressure : {city.pressure} hPa</p>\n                <p className='humidity'>Humidity : {city.humidity}%</p>\n                <p className='visibility'>Visibility : {city.visibility}</p>\n              </div>\n              <div className=\"wind\">\n                <div className='wind-content'>\n                  <div className='wind-icon'><TiLocationArrowOutline /></div>\n                  <div><p className='wind-speed'>{city.wind}</p></div>\n                </div>\n              </div>\n              <div className=\"sun\">\n                <p className='sun-rise'>Sunrise : {city.sunrise}</p>\n                <p className='sun-set'>Sunset : {city.sunset}</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Forecast Section */}\n          <div className=\"forecast-section\">\n            {forecast.map((f, i) => (\n              <div className=\"forecast-card\" key={i}>\n                <p>{f.day}</p>\n                {f.icon}\n                <p>{f.tempMin}°C / {f.tempMax}°C</p>\n              </div>\n            ))}\n          </div>\n\n          {/* Favorite & Remove Buttons */}\n          <div className=\"card-buttons\">\n            <button className=\"favorite-btn\" onClick={() => toggleFavorite(city.cityName)}>\n              {city.favorite ? \"★ Favorite\" : \"☆ Favorite\"}\n            </button>\n            <button className=\"remove-btn\" onClick={() => onRemove(city.cityName)}>❌ Remove</button>\n          </div>\n        </div>\n      </div>\n    );\n  });\n\n  return <div className=\"city-grid\">{citylistItems}</div>;\n}\n\n// Main App component\nfunction App() {\n  const [cities, setCities] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n\n  // Detect current location weather on load\n  useEffect(() => {\n    detectLocationWeather(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Function: detect location and fetch weather\n  const detectLocationWeather = (isAuto = false) => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async (pos) => {\n        const { latitude, longitude } = pos.coords;\n        try {\n          const res = await axios.get(\n            `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`\n          );\n          const data = res.data;\n          const cityObj = {\n            cityName: data.name,\n            country: data.sys.country,\n            temperature: Math.round(data.main.temp),\n            minTemperature: Math.round(data.main.temp_min),\n            maxTemperature: Math.round(data.main.temp_max),\n            description: data.weather[0].description,\n            pressure: data.main.pressure,\n            humidity: data.main.humidity,\n            visibility: `${data.visibility / 1000} km`,\n            wind: `${data.wind.speed} m/s`,\n            sunrise: new Date(data.sys.sunrise * 1000).toLocaleTimeString(),\n            sunset: new Date(data.sys.sunset * 1000).toLocaleTimeString(),\n            lastUpdatedTime: new Date().toLocaleTimeString(),\n            favorite: false,\n          };\n\n          setCities(prev => {\n            if (isAuto) return [cityObj]; // overwrite on first load\n            if (prev.some(c => c.cityName === cityObj.cityName)) return prev; // avoid duplicates\n            return [...prev, cityObj];\n          });\n        } catch (err) {\n          console.error(\"Location fetch failed:\", err);\n          if (!isAuto) setError(\"Could not fetch your current location weather\");\n        }\n      });\n    }\n  };\n\n  // Function to fetch city weather\n  const addCity = () => {\n    const trimmedInput = search.trim();\n    if (!trimmedInput) return;\n\n    const cityList = trimmedInput.split(\",\").map(c => c.trim()).filter(c => c);\n    const newCityList = cityList.filter(c =>\n      !cities.some(existing => existing.cityName.toLowerCase() === c.toLowerCase())\n    );\n    if (newCityList.length === 0) {\n      setError(\"All cities already added or invalid input\");\n      return;\n    }\n\n    const query = newCityList.join(\",\");\n    setLoading(true);\n    axios.get(`http://localhost:3001/weather/cities?names=${query}`)\n      .then(response => {\n        if (!response.data || response.data.length === 0) {\n          setError(\"City not found\");\n          return;\n        }\n        const updatedData = response.data.map(c => ({ ...c, favorite: false }));\n        setCities(prev => [...prev, ...updatedData]);\n        setSearch(\"\");\n        setError(\"\");\n      })\n      .catch(err => {\n        console.error(\"Error fetching cities:\", err);\n        setError(err.response?.data?.message || \"Error fetching cities\");\n      })\n      .finally(() => setLoading(false));\n  };\n\n  // Remove city\n  const removeCity = (cityName) => {\n    setCities(prev => prev.filter(city => city.cityName !== cityName));\n  };\n\n  // Toggle favorite\n  const toggleFavorite = (cityName) => {\n    setCities(prev => prev.map(city => city.cityName === cityName ? { ...city, favorite: !city.favorite } : city));\n  };\n\n  // Auto-refresh every 5 minutes\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (cities.length > 0) {\n        const query = cities.map(c => c.cityName).join(\",\");\n        axios.get(`http://localhost:3001/weather/cities?names=${query}`)\n          .then(response => {\n            if (response.data) {\n              const refreshedData = response.data.map(c => {\n                const oldCity = cities.find(old => old.cityName === c.cityName);\n                return { ...c, favorite: oldCity?.favorite || false };\n              });\n              setCities(refreshedData);\n            }\n          })\n          .catch(err => console.error(\"Auto-refresh failed:\", err));\n      }\n    }, 300000);\n    return () => clearInterval(interval);\n  }, [cities]);\n\n  const favoriteCities = cities.filter(c => c.favorite);\n  const normalCities = cities.filter(c => !c.favorite);\n\n  return (\n    <div className=\"app\">\n      {/* Sidebar */}\n      <div className={`sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\n        <button className=\"close-btn\" onClick={() => setSidebarOpen(false)}>×</button>\n        <h3>🌍 Weather Sidebar</h3>\n        <p>Total Cities: {cities.length}</p>\n        <p>Favorites: {favoriteCities.length}</p>\n        <button onClick={() => detectLocationWeather(false)}>📍 Detect Location</button>\n      </div>\n\n      {/* Sidebar toggle button */}\n      <button className=\"sidebar-toggle\" onClick={() => setSidebarOpen(true)}>☰</button>\n\n      <Header />\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter city or multiple cities (comma separated)\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          onKeyPress={(e) => { if (e.key === \"Enter\") addCity(); }}\n        />\n        <button onClick={addCity} disabled={loading}>\n          {loading ? <span className=\"loader\"></span> : \"Add City\"}\n        </button>\n      </div>\n      {error && <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>}\n\n      {favoriteCities.length > 0 && (\n        <>\n          <h3 style={{ textAlign: \"center\" }}>★ Favorites</h3>\n          <RenderingArrayOfCityObjects cityData={favoriteCities} onRemove={removeCity} toggleFavorite={toggleFavorite} />\n        </>\n      )}\n\n      <RenderingArrayOfCityObjects cityData={normalCities} onRemove={removeCity} toggleFavorite={toggleFavorite} />\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}