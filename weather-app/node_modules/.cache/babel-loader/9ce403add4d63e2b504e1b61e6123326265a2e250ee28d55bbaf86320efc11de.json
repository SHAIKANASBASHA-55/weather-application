{"ast":null,"code":"import _objectSpread from\"C:/Users/nvdka/Downloads/Telegram Desktop/weather-application/weather-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import axios from'axios';import'./index.css';import{RandomColor}from\"./styles.js\";import Header from'./components/Header.jsx';import Footer from'./components/Footer.jsx';import{TiLocationArrowOutline}from\"react-icons/ti\";import{CiCloudOn,CiCloudDrizzle,CiSun}from\"react-icons/ci\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const API_KEY=\"b81b6799c2282dbb9792e9d52e8d2101\";// Forecast icons mapping\nconst getWeatherIcon=desc=>{const d=desc.toLowerCase();if(d.includes(\"rain\"))return/*#__PURE__*/_jsx(CiCloudDrizzle,{});if(d.includes(\"cloud\"))return/*#__PURE__*/_jsx(CiCloudOn,{});if(d.includes(\"sun\"))return/*#__PURE__*/_jsx(CiSun,{});return/*#__PURE__*/_jsx(CiCloudOn,{});};// Component to render city cards\nfunction RenderingArrayOfCityObjects(_ref){let{cityData,onRemove,toggleFavorite}=_ref;const citylistItems=cityData.map((city,index)=>{const cardColor=RandomColor();const forecast=Array(3).fill().map((_,i)=>({day:\"Day \".concat(i+1),tempMin:city.minTemperature-i,tempMax:city.maxTemperature+i,icon:getWeatherIcon(city.description)}));return/*#__PURE__*/_jsxs(\"div\",{className:\"card animate-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"top-division\",style:{background:cardColor},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"top-leftDivision\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"city-name\",children:[city.cityName,\",\",city.country]}),/*#__PURE__*/_jsx(\"p\",{className:\"city-time\",children:city.lastUpdatedTime}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-desc\",children:[getWeatherIcon(city.description),/*#__PURE__*/_jsx(\"p\",{className:\"weather-description\",children:city.description})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"top-rightDivision\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"temp-content\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"temp\",children:[city.temperature,\"\\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"temp-min\",children:[\"Min: \",city.minTemperature,\"\\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"temp-max\",children:[\"Max: \",city.maxTemperature,\"\\xB0C\"]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom-division\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bottom-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"extra-details\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"pressure\",children:[\"Pressure : \",city.pressure,\" hPa\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"humidity\",children:[\"Humidity : \",city.humidity,\"%\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"visibility\",children:[\"Visibility : \",city.visibility]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"wind\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"wind-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"wind-icon\",children:/*#__PURE__*/_jsx(TiLocationArrowOutline,{})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{className:\"wind-speed\",children:city.wind})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"sun\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"sun-rise\",children:[\"Sunrise : \",city.sunrise]}),/*#__PURE__*/_jsxs(\"p\",{className:\"sun-set\",children:[\"Sunset : \",city.sunset]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"forecast-section\",children:forecast.map((f,i)=>/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-card\",children:[/*#__PURE__*/_jsx(\"p\",{children:f.day}),f.icon,/*#__PURE__*/_jsxs(\"p\",{children:[f.tempMin,\"\\xB0C / \",f.tempMax,\"\\xB0C\"]})]},i))}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"favorite-btn\",onClick:()=>toggleFavorite(city.cityName),children:city.favorite?\"★ Favorite\":\"☆ Favorite\"}),/*#__PURE__*/_jsx(\"button\",{className:\"remove-btn\",onClick:()=>onRemove(city.cityName),children:\"\\u274C Remove\"})]})]},index);});return/*#__PURE__*/_jsx(\"div\",{className:\"card-container\",children:citylistItems});}// Main App component\nfunction App(){const[cities,setCities]=useState([]);const[search,setSearch]=useState(\"\");const[error,setError]=useState(\"\");const[loading,setLoading]=useState(false);// Detect current location weather on load\nuseEffect(()=>{detectLocationWeather(true);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);const detectLocationWeather=function(){let isAuto=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(navigator.geolocation){navigator.geolocation.getCurrentPosition(async pos=>{const{latitude,longitude}=pos.coords;try{const res=await axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(latitude,\"&lon=\").concat(longitude,\"&appid=\").concat(API_KEY,\"&units=metric\"));const data=res.data;const cityObj={cityName:data.name,country:data.sys.country,temperature:Math.round(data.main.temp),minTemperature:Math.round(data.main.temp_min),maxTemperature:Math.round(data.main.temp_max),description:data.weather[0].description,pressure:data.main.pressure,humidity:data.main.humidity,visibility:\"\".concat(data.visibility/1000,\" km\"),wind:\"\".concat(data.wind.speed,\" m/s\"),sunrise:new Date(data.sys.sunrise*1000).toLocaleTimeString(),sunset:new Date(data.sys.sunset*1000).toLocaleTimeString(),lastUpdatedTime:new Date().toLocaleTimeString(),favorite:false};setCities(prev=>{if(isAuto)return[cityObj];if(prev.some(c=>c.cityName===cityObj.cityName))return prev;return[...prev,cityObj];});}catch(err){console.error(\"Location fetch failed:\",err);if(!isAuto)setError(\"Could not fetch your current location weather\");}});}};const addCity=()=>{const trimmedInput=search.trim();if(!trimmedInput)return;const cityList=trimmedInput.split(\",\").map(c=>c.trim()).filter(c=>c);const newCityList=cityList.filter(c=>!cities.some(existing=>existing.cityName.toLowerCase()===c.toLowerCase()));if(newCityList.length===0){setError(\"All cities already added or invalid input\");return;}const query=newCityList.join(\",\");setLoading(true);axios.get(\"http://localhost:3001/weather/cities?names=\".concat(query)).then(response=>{if(!response.data||response.data.length===0){setError(\"City not found\");return;}const updatedData=response.data.map(c=>_objectSpread(_objectSpread({},c),{},{favorite:false}));setCities(prev=>[...prev,...updatedData]);setSearch(\"\");setError(\"\");}).catch(err=>{var _err$response,_err$response$data;console.error(\"Error fetching cities:\",err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||\"Error fetching cities\");}).finally(()=>setLoading(false));};const removeCity=cityName=>{setCities(prev=>prev.filter(city=>city.cityName!==cityName));};const toggleFavorite=cityName=>{setCities(prev=>prev.map(city=>city.cityName===cityName?_objectSpread(_objectSpread({},city),{},{favorite:!city.favorite}):city));};// Auto-refresh every 5 minutes\nuseEffect(()=>{const interval=setInterval(()=>{if(cities.length>0){const query=cities.map(c=>c.cityName).join(\",\");axios.get(\"http://localhost:3001/weather/cities?names=\".concat(query)).then(response=>{if(response.data){const refreshedData=response.data.map(c=>{const oldCity=cities.find(old=>old.cityName===c.cityName);return _objectSpread(_objectSpread({},c),{},{favorite:(oldCity===null||oldCity===void 0?void 0:oldCity.favorite)||false});});setCities(refreshedData);}}).catch(err=>console.error(\"Auto-refresh failed:\",err));}},300000);return()=>clearInterval(interval);},[cities]);const favoriteCities=cities.filter(c=>c.favorite);const normalCities=cities.filter(c=>!c.favorite);// Sidebar stats (now passed to Header)\nconst avgTemp=cities.length?(cities.reduce((sum,c)=>sum+c.temperature,0)/cities.length).toFixed(1):\"-\";const avgHumidity=cities.length?(cities.reduce((sum,c)=>sum+c.humidity,0)/cities.length).toFixed(1):\"-\";const maxWind=cities.length?Math.max(...cities.map(c=>parseFloat(c.wind))):\"-\";return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(Header,{cities:cities,avgTemp:avgTemp,avgHumidity:avgHumidity,maxWind:maxWind}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-bar\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter city or multiple cities (comma separated)\",value:search,onChange:e=>setSearch(e.target.value),onKeyPress:e=>{if(e.key===\"Enter\")addCity();}}),/*#__PURE__*/_jsx(\"button\",{onClick:addCity,disabled:loading,children:loading?/*#__PURE__*/_jsx(\"span\",{className:\"loader\"}):\"Add City\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>detectLocationWeather(false),children:\"\\uD83D\\uDCCD Detect Location\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\",textAlign:\"center\"},children:error}),favoriteCities.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:\"center\"},children:\"\\u2605 Favorites\"}),/*#__PURE__*/_jsx(RenderingArrayOfCityObjects,{cityData:favoriteCities,onRemove:removeCity,toggleFavorite:toggleFavorite})]}),/*#__PURE__*/_jsx(RenderingArrayOfCityObjects,{cityData:normalCities,onRemove:removeCity,toggleFavorite:toggleFavorite}),/*#__PURE__*/_jsx(Footer,{})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","RandomColor","Header","Footer","TiLocationArrowOutline","CiCloudOn","CiCloudDrizzle","CiSun","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","API_KEY","getWeatherIcon","desc","d","toLowerCase","includes","RenderingArrayOfCityObjects","_ref","cityData","onRemove","toggleFavorite","citylistItems","map","city","index","cardColor","forecast","Array","fill","_","i","day","concat","tempMin","minTemperature","tempMax","maxTemperature","icon","description","className","children","style","background","cityName","country","lastUpdatedTime","temperature","pressure","humidity","visibility","wind","sunrise","sunset","f","onClick","favorite","App","cities","setCities","search","setSearch","error","setError","loading","setLoading","detectLocationWeather","isAuto","arguments","length","undefined","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","coords","res","get","data","cityObj","name","sys","Math","round","main","temp","temp_min","temp_max","weather","speed","Date","toLocaleTimeString","prev","some","c","err","console","addCity","trimmedInput","trim","cityList","split","filter","newCityList","existing","query","join","then","response","updatedData","_objectSpread","catch","_err$response","_err$response$data","message","finally","removeCity","interval","setInterval","refreshedData","oldCity","find","old","clearInterval","favoriteCities","normalCities","avgTemp","reduce","sum","toFixed","avgHumidity","maxWind","max","parseFloat","type","placeholder","value","onChange","e","target","onKeyPress","key","disabled","color","textAlign"],"sources":["C:/Users/nvdka/Downloads/Telegram Desktop/weather-application/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './index.css';\r\nimport { RandomColor } from \"./styles.js\";\r\nimport Header from './components/Header.jsx';\r\nimport Footer from './components/Footer.jsx';\r\nimport { TiLocationArrowOutline } from \"react-icons/ti\";\r\nimport { CiCloudOn, CiCloudDrizzle, CiSun } from \"react-icons/ci\";\r\n\r\nconst API_KEY = \"b81b6799c2282dbb9792e9d52e8d2101\";\r\n\r\n// Forecast icons mapping\r\nconst getWeatherIcon = (desc) => {\r\n  const d = desc.toLowerCase();\r\n  if (d.includes(\"rain\")) return <CiCloudDrizzle />;\r\n  if (d.includes(\"cloud\")) return <CiCloudOn />;\r\n  if (d.includes(\"sun\")) return <CiSun />;\r\n  return <CiCloudOn />;\r\n};\r\n\r\n// Component to render city cards\r\nfunction RenderingArrayOfCityObjects({ cityData, onRemove, toggleFavorite }) {\r\n  const citylistItems = cityData.map((city, index) => {\r\n    const cardColor = RandomColor();\r\n\r\n    const forecast = Array(3).fill().map((_, i) => ({\r\n      day: `Day ${i + 1}`,\r\n      tempMin: city.minTemperature - i,\r\n      tempMax: city.maxTemperature + i,\r\n      icon: getWeatherIcon(city.description)\r\n    }));\r\n\r\n    return (\r\n      <div className=\"card animate-card\" key={index}>\r\n        <div className=\"top-division\" style={{ background: cardColor }}>\r\n          <div className='top-leftDivision'>\r\n            <h2 className='city-name'>{city.cityName},{city.country}</h2>\r\n            <p className='city-time'>{city.lastUpdatedTime}</p>\r\n            <div className='weather-desc'>\r\n              {getWeatherIcon(city.description)}\r\n              <p className='weather-description'>{city.description}</p>\r\n            </div>\r\n          </div>\r\n          <div className='top-rightDivision'>\r\n            <div className='temp-content'>\r\n              <h1 className='temp'>{city.temperature}°C</h1>\r\n              <p className='temp-min'>Min: {city.minTemperature}°C</p>\r\n              <p className='temp-max'>Max: {city.maxTemperature}°C</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bottom-division\">\r\n          <div className='bottom-content'>\r\n            <div className=\"extra-details\">\r\n              <p className='pressure'>Pressure : {city.pressure} hPa</p>\r\n              <p className='humidity'>Humidity : {city.humidity}%</p>\r\n              <p className='visibility'>Visibility : {city.visibility}</p>\r\n            </div>\r\n            <div className=\"wind\">\r\n              <div className='wind-content'>\r\n                <div className='wind-icon'><TiLocationArrowOutline /></div>\r\n                <div><p className='wind-speed'>{city.wind}</p></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"sun\">\r\n              <p className='sun-rise'>Sunrise : {city.sunrise}</p>\r\n              <p className='sun-set'>Sunset : {city.sunset}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Forecast Section */}\r\n        <div className=\"forecast-section\">\r\n          {forecast.map((f, i) => (\r\n            <div className=\"forecast-card\" key={i}>\r\n              <p>{f.day}</p>\r\n              {f.icon}\r\n              <p>{f.tempMin}°C / {f.tempMax}°C</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Favorite & Remove Buttons */}\r\n        <div className=\"card-buttons\">\r\n          <button className=\"favorite-btn\" onClick={() => toggleFavorite(city.cityName)}>\r\n            {city.favorite ? \"★ Favorite\" : \"☆ Favorite\"}\r\n          </button>\r\n          <button className=\"remove-btn\" onClick={() => onRemove(city.cityName)}>❌ Remove</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <div className=\"card-container\">{citylistItems}</div>;\r\n}\r\n\r\n// Main App component\r\nfunction App() {\r\n  const [cities, setCities] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Detect current location weather on load\r\n  useEffect(() => {\r\n    detectLocationWeather(true);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const detectLocationWeather = (isAuto = false) => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(async (pos) => {\r\n        const { latitude, longitude } = pos.coords;\r\n        try {\r\n          const res = await axios.get(\r\n            `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`\r\n          );\r\n          const data = res.data;\r\n          const cityObj = {\r\n            cityName: data.name,\r\n            country: data.sys.country,\r\n            temperature: Math.round(data.main.temp),\r\n            minTemperature: Math.round(data.main.temp_min),\r\n            maxTemperature: Math.round(data.main.temp_max),\r\n            description: data.weather[0].description,\r\n            pressure: data.main.pressure,\r\n            humidity: data.main.humidity,\r\n            visibility: `${data.visibility / 1000} km`,\r\n            wind: `${data.wind.speed} m/s`,\r\n            sunrise: new Date(data.sys.sunrise * 1000).toLocaleTimeString(),\r\n            sunset: new Date(data.sys.sunset * 1000).toLocaleTimeString(),\r\n            lastUpdatedTime: new Date().toLocaleTimeString(),\r\n            favorite: false,\r\n          };\r\n\r\n          setCities(prev => {\r\n            if (isAuto) return [cityObj];\r\n            if (prev.some(c => c.cityName === cityObj.cityName)) return prev;\r\n            return [...prev, cityObj];\r\n          });\r\n        } catch (err) {\r\n          console.error(\"Location fetch failed:\", err);\r\n          if (!isAuto) setError(\"Could not fetch your current location weather\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const addCity = () => {\r\n    const trimmedInput = search.trim();\r\n    if (!trimmedInput) return;\r\n\r\n    const cityList = trimmedInput.split(\",\").map(c => c.trim()).filter(c => c);\r\n    const newCityList = cityList.filter(c =>\r\n      !cities.some(existing => existing.cityName.toLowerCase() === c.toLowerCase())\r\n    );\r\n    if (newCityList.length === 0) {\r\n      setError(\"All cities already added or invalid input\");\r\n      return;\r\n    }\r\n\r\n    const query = newCityList.join(\",\");\r\n    setLoading(true);\r\n    axios.get(`http://localhost:3001/weather/cities?names=${query}`)\r\n      .then(response => {\r\n        if (!response.data || response.data.length === 0) {\r\n          setError(\"City not found\");\r\n          return;\r\n        }\r\n        const updatedData = response.data.map(c => ({ ...c, favorite: false }));\r\n        setCities(prev => [...prev, ...updatedData]);\r\n        setSearch(\"\");\r\n        setError(\"\");\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Error fetching cities:\", err);\r\n        setError(err.response?.data?.message || \"Error fetching cities\");\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const removeCity = (cityName) => {\r\n    setCities(prev => prev.filter(city => city.cityName !== cityName));\r\n  };\r\n\r\n  const toggleFavorite = (cityName) => {\r\n    setCities(prev => prev.map(city => city.cityName === cityName ? { ...city, favorite: !city.favorite } : city));\r\n  };\r\n\r\n  // Auto-refresh every 5 minutes\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (cities.length > 0) {\r\n        const query = cities.map(c => c.cityName).join(\",\");\r\n        axios.get(`http://localhost:3001/weather/cities?names=${query}`)\r\n          .then(response => {\r\n            if (response.data) {\r\n              const refreshedData = response.data.map(c => {\r\n                const oldCity = cities.find(old => old.cityName === c.cityName);\r\n                return { ...c, favorite: oldCity?.favorite || false };\r\n              });\r\n              setCities(refreshedData);\r\n            }\r\n          })\r\n          .catch(err => console.error(\"Auto-refresh failed:\", err));\r\n      }\r\n    }, 300000);\r\n    return () => clearInterval(interval);\r\n  }, [cities]);\r\n\r\n  const favoriteCities = cities.filter(c => c.favorite);\r\n  const normalCities = cities.filter(c => !c.favorite);\r\n\r\n  // Sidebar stats (now passed to Header)\r\n  const avgTemp = cities.length ? (cities.reduce((sum, c) => sum + c.temperature, 0) / cities.length).toFixed(1) : \"-\";\r\n  const avgHumidity = cities.length ? (cities.reduce((sum, c) => sum + c.humidity, 0) / cities.length).toFixed(1) : \"-\";\r\n  const maxWind = cities.length ? Math.max(...cities.map(c => parseFloat(c.wind))) : \"-\";\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header\r\n        cities={cities}\r\n        avgTemp={avgTemp}\r\n        avgHumidity={avgHumidity}\r\n        maxWind={maxWind}\r\n      />\r\n\r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter city or multiple cities (comma separated)\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          onKeyPress={(e) => { if (e.key === \"Enter\") addCity(); }}\r\n        />\r\n        <button onClick={addCity} disabled={loading}>\r\n          {loading ? <span className=\"loader\"></span> : \"Add City\"}\r\n        </button>\r\n        <button onClick={() => detectLocationWeather(false)}>📍 Detect Location</button>\r\n      </div>\r\n\r\n      {error && <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>}\r\n\r\n      {favoriteCities.length > 0 && (\r\n        <>\r\n          <h3 style={{ textAlign: \"center\" }}>★ Favorites</h3>\r\n          <RenderingArrayOfCityObjects cityData={favoriteCities} onRemove={removeCity} toggleFavorite={toggleFavorite} />\r\n        </>\r\n      )}\r\n\r\n      <RenderingArrayOfCityObjects cityData={normalCities} onRemove={removeCity} toggleFavorite={toggleFavorite} />\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}